CRT PYTHON DAY 3 TECHNICAL TRAINING
##INDEXING
l=[1,4,7.4,"sam"]
l
[1, 4, 7.4, 'sam']
l[3]
'sam'

##SLICING OF A STRING
l[2:4]
[7.4, 'sam']

l[0:]
[1, 4, 7.4, 'sam']

l[:3]
[1, 4, 7.4]

l[-1]
'sam'
##FOR REVERSING THE STRING
l[::-1]
['sam', 7.4, 4, 1]
l[:]
[1, 4, 7.4, 'sam']

LIST METHODS
##ADD METHODS
append()-used to add only one element
extend()-used to add all element
##REMOVE METHODS
remove()-removes an item from the list

pop()-removes and returns an element at given index
clear()-removes entire list
index()-returns the index of first matched element
count()-returns the count of nos passed in arguments
sort()-sort items in list ascending order
reverse()-reverse order of items on list
copy()-returns a shallow copy of list
insert()-insert item at particular position in list syntax-(1,20)-(position,value)
l.append(50)

l
[1, 4, 7.4, 'sam', 50, 50]
l
[1, 4, 7.4, 'sam', 50, 50]
l.extend([80,60])
l
[1, 4, 7.4, 'sam', 50, 50, 80, 60]
l.insert(2,60)
l
[1, 4, 60, 7.4, 'sam', 50, 50, 80, 60]

l=[1,3.2,4,"manasa"]
l.remove(3.2)
l
[1, 4, 'manasa']
l.pop(2)
'manasa'
l.index(4)
1
l.extend([50,60,25,81,12,12,12,12])
l
[1, 4, 50, 60, 25, 81, 12, 12, 12, 12]
l.count(12)
4
l.sort
<built-in method sort of list object at 0x00000139EF3C9640>
l
[1, 4, 50, 60, 25, 81, 12, 12, 12, 12]
l.sort()
l
[1, 4, 12, 12, 12, 12, 25, 50, 60, 81]
l.reverse()
l
[81, 60, 50, 25, 12, 12, 12, 12, 4, 1]
l.copy()
[81, 60, 50, 25, 12, 12, 12, 12, 4, 1]
##PROGRAMS
create a list with 10 items print the items one by one 
create the list with 5 float numbers find and display sum and avg of the list
after creating a list with six elements from the user extract only even nos and print
#SET METHODS
add()-used to add one element randomly
update()-used to add all elements
discard()-remove items in set
remove()-get error if ele not present
union()-combines all elements(|)
difference()-removes common elements and display elements in s
intersection()-present commonn elements
symmetric difference-removes common ele and display remianing







































##dictionary methods
d.items{}-returns all pairs
d.update({'c':89})-add one or more items
d.pop('b')-fetch and remove item
d.popitem()-fetch and remove recently added item
d.setdefault('angel',700)-if key is not in dic will be added or nothing will be done














##dictionary


d={'syl':'hi','hello':'manasa'}
type(d)
<class 'dict'>
dict.fromkeys(d)
{'syl': None, 'hello': None}
dict.fromkeys(d,60)
{'syl': 60, 'hello': 60}
{}.fromkeys(d,100)
{'syl': 100, 'hello': 100}
d=dict.fromkeys(1,100)


